<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>go on kasvith.github.io - a personal blog space</title><link>https://kasvith.github.io/categories/go/</link><description>Recent content in go on kasvith.github.io - a personal blog space</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 09 Nov 2019 00:11:56 +0530</lastBuildDate><atom:link href="https://kasvith.github.io/categories/go/index.xml" rel="self" type="application/rss+xml"/><item><title>Let&#39;s Create a Simple Load Balancer With Go</title><link>https://kasvith.github.io/posts/lets-create-a-simple-lb-go/</link><pubDate>Sat, 09 Nov 2019 00:11:56 +0530</pubDate><guid>https://kasvith.github.io/posts/lets-create-a-simple-lb-go/</guid><description>Load Balancers plays a key role in Web Architecture. They allow distributing load among a set of backends. This makes services more scalable. Also since there are multiple backends configured the service become highly available as load balancer can pick up a working server in case of a failure.
After playing with professional Load Balancers like NGINX I tried creating a simple Load Balancer for fun. I implemented it using Golang.</description></item><item><title>How I Embedded Resources in Go</title><link>https://kasvith.github.io/posts/how-i-embedded-resources-in-go/</link><pubDate>Fri, 26 Jul 2019 16:34:56 +0000</pubDate><guid>https://kasvith.github.io/posts/how-i-embedded-resources-in-go/</guid><description>During my internship period at WSO2, Inc I worked on a project to develop a CI/CD pipeline for WSO2 API Manager. The tooling was mostly done in Golang.
When we were developing the tooling we wanted to have a project initialization phase through the CLI tool. That indeed involves a lot of code generation.
In the beginning, everything was fine, we had few files and we kept them as slices of bytes and accessed them, which was totally fine.</description></item></channel></rss>