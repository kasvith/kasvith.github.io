<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on kasvith.me - a personal blog space</title><link>https://kasvith.me/posts/</link><description>Recent content in Posts on kasvith.me - a personal blog space</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 14 May 2020 16:13:29 +0530</lastBuildDate><atom:link href="https://kasvith.me/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Deno - first impression</title><link>https://kasvith.me/posts/deno-first-impression/</link><pubDate>Thu, 14 May 2020 16:13:29 +0530</pubDate><guid>https://kasvith.me/posts/deno-first-impression/</guid><description>Deno is a new secure runtime for javascript and typescript created by Ryan Dhal, original author of NodeJS. Recently Deno 1.0.0 was released and this is my first impression about it.
Meet Deno Deno is a new secure Typescript and Javascript runtime. Yes similar to our loving NodeJS. Deno was created by Ryan Dhal the original author of NodeJS.
Deno is written in Rust, Tokio and Typescript using V8 under the hood.</description></item><item><title>How We Created a Realtime Patient Monitoring System With Go and Vue in 3 days</title><link>https://kasvith.me/posts/how-we-created-a-realtime-patient-monitoring-system-with-go-and-vue/</link><pubDate>Sat, 25 Apr 2020 00:55:56 +0530</pubDate><guid>https://kasvith.me/posts/how-we-created-a-realtime-patient-monitoring-system-with-go-and-vue/</guid><description>A Pandemic started In the last November in 2019, we heard about the first case of unknown deadly diseases from China. Now everyone knows it as Covid-19 Now it seems to change our lives forever. The virus is deadly and it is highly contagious. Still, we know very little about it. I truly hope we will find some cure soon.
Corona Virus
Covid-19 attacked Sri Lanka Due to the nature of the virus, it was very hard to stop it from spreading.</description></item><item><title>Let&#39;s Create a Simple Load Balancer With Go</title><link>https://kasvith.me/posts/lets-create-a-simple-lb-go/</link><pubDate>Sat, 09 Nov 2019 00:11:56 +0530</pubDate><guid>https://kasvith.me/posts/lets-create-a-simple-lb-go/</guid><description>Load Balancers plays a key role in Web Architecture. They allow distributing load among a set of backends. This makes services more scalable. Also since there are multiple backends configured the service become highly available as load balancer can pick up a working server in case of a failure.
After playing with professional Load Balancers like NGINX I tried creating a simple Load Balancer for fun. I implemented it using Golang.</description></item><item><title>Moving to My Own Space</title><link>https://kasvith.me/posts/moving-to-my-own-space/</link><pubDate>Mon, 29 Jul 2019 00:24:44 +0530</pubDate><guid>https://kasvith.me/posts/moving-to-my-own-space/</guid><description>Why moving to own space It&amp;rsquo;s been a while I started blogging. I started from Blogger, Wordpress and finally stopped over Medium. It was fine to use these awesome tools. But with the time I felt that moving to my own space is better for blogging.
While these platform provides a great service I wanted more control over my content. I hate ads and stuffs, paywalls and I know you do too.</description></item><item><title>How I Embedded Resources in Go</title><link>https://kasvith.me/posts/how-i-embedded-resources-in-go/</link><pubDate>Fri, 26 Jul 2019 16:34:56 +0000</pubDate><guid>https://kasvith.me/posts/how-i-embedded-resources-in-go/</guid><description>During my internship period at WSO2, Inc I worked on a project to develop a CI/CD pipeline for WSO2 API Manager. The tooling was mostly done in Golang.
When we were developing the tooling we wanted to have a project initialization phase through the CLI tool. That indeed involves a lot of code generation.
In the beginning, everything was fine, we had few files and we kept them as slices of bytes and accessed them, which was totally fine.</description></item></channel></rss>